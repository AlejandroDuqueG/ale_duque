{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Desktop\\\\programming\\\\ale_duque\\\\src\\\\miContexto.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const contexto = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = contexto;\n\nconst MiCustomProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [carrito, setCarrito] = useState([]);\n  const [cantidadTotal, setCantidadTotal] = useState(0);\n  const [precioTotal, setPrecioTotal] = useState(0);\n\n  const agregarProducto = producto => {\n    if (estaEnCarrito(producto.id)) {\n      toast.info(\"El producto ya está en el carrito!\");\n    } else {\n      setCantidadTotal(cantidadTotal + producto.cantidad);\n      setPrecioTotal(precioTotal + producto.precio);\n      setCarrito([...carrito, producto]);\n    }\n  };\n\n  const eliminarProducto = id => {};\n\n  const vaciarCarrito = () => {\n    setCarrito([]);\n  };\n\n  const estaEnCarrito = id => {\n    return carrito.find(productoCarrito => productoCarrito.id == id);\n  };\n\n  const valorDelContexto = {\n    cantidadTotal,\n    precioTotal,\n    carrito,\n    agregarProducto,\n    eliminarProducto,\n    vaciarCarrito,\n    estaEnCarrito\n  };\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: valorDelContexto,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MiCustomProvider, \"ikh99QYxq/EYvpX15M1euZeoy7A=\");\n\n_c = MiCustomProvider;\nexport default MiCustomProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MiCustomProvider\");","map":{"version":3,"sources":["C:/Users/usuario/Desktop/programming/ale_duque/src/miContexto.js"],"names":["createContext","useState","toast","contexto","Provider","MiCustomProvider","children","carrito","setCarrito","cantidadTotal","setCantidadTotal","precioTotal","setPrecioTotal","agregarProducto","producto","estaEnCarrito","id","info","cantidad","precio","eliminarProducto","vaciarCarrito","find","productoCarrito","valorDelContexto"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,OAAO,MAAMC,QAAQ,gBAAGH,aAAa,EAA9B;AACP,MAAM;AAAEI,EAAAA;AAAF,IAAeD,QAArB;;AAGA,MAAME,gBAAgB,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEvC,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBP,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACQ,aAAD,EAAeC,gBAAf,IAAmCT,QAAQ,CAAC,CAAD,CAAjD;AACA,QAAM,CAACU,WAAD,EAAaC,cAAb,IAA+BX,QAAQ,CAAC,CAAD,CAA7C;;AAGA,QAAMY,eAAe,GAAIC,QAAD,IAAc;AACpC,QAAGC,aAAa,CAACD,QAAQ,CAACE,EAAV,CAAhB,EAA8B;AAC5Bd,MAAAA,KAAK,CAACe,IAAN,CAAW,oCAAX;AACD,KAFD,MAEK;AACHP,MAAAA,gBAAgB,CAACD,aAAa,GAAGK,QAAQ,CAACI,QAA1B,CAAhB;AACAN,MAAAA,cAAc,CAACD,WAAW,GAAGG,QAAQ,CAACK,MAAxB,CAAd;AACAX,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAYO,QAAZ,CAAD,CAAV;AACD;AACF,GARD;;AAUA,QAAMM,gBAAgB,GAAIJ,EAAD,IAAQ,CAEhC,CAFD;;AAIA,QAAMK,aAAa,GAAG,MAAM;AAC1Bb,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAFD;;AAIA,QAAMO,aAAa,GAAIC,EAAD,IAAQ;AAC5B,WAAOT,OAAO,CAACe,IAAR,CAAaC,eAAe,IAAEA,eAAe,CAACP,EAAhB,IAAsBA,EAApD,CAAP;AACD,GAFD;;AAIA,QAAMQ,gBAAgB,GAAG;AACvBf,IAAAA,aADuB;AAEvBE,IAAAA,WAFuB;AAGvBJ,IAAAA,OAHuB;AAIvBM,IAAAA,eAJuB;AAKvBO,IAAAA,gBALuB;AAMvBC,IAAAA,aANuB;AAOvBN,IAAAA;AAPuB,GAAzB;AAUA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAES,gBAAjB;AAAA,cACGlB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5CD;;GAAMD,gB;;KAAAA,gB;AA8CN,eAAeA,gBAAf","sourcesContent":["import { createContext, useState } from \"react\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const contexto = createContext()\r\nconst { Provider } = contexto\r\n\r\n\r\nconst MiCustomProvider = ({children}) => {\r\n\r\n  const [carrito,setCarrito] = useState([])\r\n  const [cantidadTotal,setCantidadTotal] = useState(0)\r\n  const [precioTotal,setPrecioTotal] = useState(0)\r\n  \r\n\r\n  const agregarProducto = (producto) => {\r\n    if(estaEnCarrito(producto.id)){\r\n      toast.info(\"El producto ya está en el carrito!\")\r\n    }else{\r\n      setCantidadTotal(cantidadTotal + producto.cantidad)\r\n      setPrecioTotal(precioTotal + producto.precio)\r\n      setCarrito([...carrito,producto])\r\n    }\r\n  }\r\n\r\n  const eliminarProducto = (id) => {\r\n    \r\n  }\r\n\r\n  const vaciarCarrito = () => {\r\n    setCarrito([])\r\n  }\r\n\r\n  const estaEnCarrito = (id) => {\r\n    return carrito.find(productoCarrito=>productoCarrito.id == id)\r\n  }\r\n\r\n  const valorDelContexto = {\r\n    cantidadTotal ,\r\n    precioTotal ,\r\n    carrito ,\r\n    agregarProducto ,\r\n    eliminarProducto , \r\n    vaciarCarrito ,\r\n    estaEnCarrito\r\n  }\r\n\r\n  return (\r\n    <Provider value={valorDelContexto} >\r\n      {children}\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default MiCustomProvider"]},"metadata":{},"sourceType":"module"}