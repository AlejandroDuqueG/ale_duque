{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Desktop\\\\programming\\\\ale_duque\\\\src\\\\ItemListContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ItemList from \"./ItemList\";\nimport productosIniciales from \"./productos.json\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { toast } from \"react-toastify\";\nimport { useParams } from \"react-router-dom\";\nimport { db } from \"./firebase\";\nimport { collection, getDoc, doc, getDocs, addDoc, query } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ItemListContainer = () => {\n  _s();\n\n  const [cargando, setCargando] = useState(true);\n  const [productos, setProductos] = useState([]);\n  const {\n    nombreCategoria,\n    test\n  } = useParams();\n  useEffect(() => {\n    const productosCollection = collection(db, \"productos\");\n    const consulta = getDocs(productosCollection);\n    consulta.then(resultado => {\n      const productos = resultado.docs.map(doc => {\n        const productoConId = doc.data();\n        productoConId.id = doc.id;\n        return productoConId;\n      });\n      setProductos(productos);\n      setCargando(false);\n    }).catch(error => {}).finally(() => {});\n  }, [nombreCategoria]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cargando ? /*#__PURE__*/_jsxDEV(BeatLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(ItemList, {\n      productos: productos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 36\n    }, this)\n  }, void 0, false);\n};\n\n_s(ItemListContainer, \"MnPXugsfryX61HOULoE9r9rRl9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemListContainer;\nexport default ItemListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"sources":["C:/Users/usuario/Desktop/programming/ale_duque/src/ItemListContainer.js"],"names":["useEffect","useState","ItemList","productosIniciales","BeatLoader","toast","useParams","db","collection","getDoc","doc","getDocs","addDoc","query","ItemListContainer","cargando","setCargando","productos","setProductos","nombreCategoria","test","productosCollection","consulta","then","resultado","docs","map","productoConId","data","id","catch","error","finally"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAASC,EAAT,QAAmB,YAAnB;AAGA,SAASC,UAAT,EAAsBC,MAAtB,EAA+BC,GAA/B,EAAqCC,OAArC,EAA+CC,MAA/C,EAAwDC,KAAxD,QAAqE,oBAArE;;;;AAIA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBf,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACgB,SAAD,EAAWC,YAAX,IAA2BjB,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM;AAACkB,IAAAA,eAAD;AAAiBC,IAAAA;AAAjB,MAAyBd,SAAS,EAAxC;AAGAN,EAAAA,SAAS,CAAC,MAAI;AAEZ,UAAMqB,mBAAmB,GAAGb,UAAU,CAACD,EAAD,EAAI,WAAJ,CAAtC;AACA,UAAMe,QAAQ,GAAGX,OAAO,CAACU,mBAAD,CAAxB;AAEAC,IAAAA,QAAQ,CACLC,IADH,CACSC,SAAD,IAAa;AACjB,YAAMP,SAAS,GAAGO,SAAS,CAACC,IAAV,CAAeC,GAAf,CAAmBhB,GAAG,IAAE;AAExC,cAAMiB,aAAa,GAAGjB,GAAG,CAACkB,IAAJ,EAAtB;AACAD,QAAAA,aAAa,CAACE,EAAd,GAAmBnB,GAAG,CAACmB,EAAvB;AAEA,eAAOF,aAAP;AACD,OANiB,CAAlB;AAQAT,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACAD,MAAAA,WAAW,CAAC,KAAD,CAAX;AAED,KAbH,EAcGc,KAdH,CAcUC,KAAD,IAAS,CAEf,CAhBH,EAiBGC,OAjBH,CAiBW,MAAI,CAEZ,CAnBH;AAqBD,GA1BQ,EA0BP,CAACb,eAAD,CA1BO,CAAT;AA4BA,sBACE;AAAA,cACGJ,QAAQ,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAoB,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEE;AAArB;AAAA;AAAA;AAAA;AAAA;AAD/B,mBADF;AAKD,CAxCD;;GAAMH,iB;UAI2BR,S;;;KAJ3BQ,iB;AA0CN,eAAeA,iBAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport ItemList from \"./ItemList\"\r\nimport productosIniciales from \"./productos.json\"\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { db } from \"./firebase\";\r\n\r\n\r\nimport { collection , getDoc , doc , getDocs , addDoc , query } from \"firebase/firestore\"\r\n\r\n\r\n\r\nconst ItemListContainer = () => {\r\n\r\n  const [cargando,setCargando] = useState(true)\r\n  const [productos,setProductos] = useState([])\r\n  const {nombreCategoria,test} = useParams()\r\n\r\n  \r\n  useEffect(()=>{\r\n\r\n    const productosCollection = collection(db,\"productos\")\r\n    const consulta = getDocs(productosCollection)\r\n\r\n    consulta\r\n      .then((resultado)=>{\r\n        const productos = resultado.docs.map(doc=>{\r\n\r\n          const productoConId = doc.data()\r\n          productoConId.id = doc.id\r\n\r\n          return productoConId\r\n        })\r\n\r\n        setProductos(productos)\r\n        setCargando(false)\r\n\r\n      })\r\n      .catch((error)=>{\r\n\r\n      })\r\n      .finally(()=>{\r\n\r\n      })\r\n\r\n  },[nombreCategoria])\r\n\r\n  return (\r\n    <>\r\n      {cargando ? <BeatLoader /> : <ItemList productos={productos} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ItemListContainer"]},"metadata":{},"sourceType":"module"}