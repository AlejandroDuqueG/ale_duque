{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Desktop\\\\programming\\\\ale_duque\\\\src\\\\Carrito.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useContext, useState } from \"react\";\nimport CarritoLista from \"./CarritoLista\";\nimport { contexto } from \"./miContexto\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Carrito = () => {\n  _s();\n\n  const {\n    precio_total,\n    carrito,\n    vaciarCarrito\n  } = useContext(contexto);\n  const [usuarios, setUsuarios] = useState([]);\n  const [nombre, setNombre] = useState(\"\");\n  const [idCompra, setIdCompra] = useState(\"\");\n\n  const handleClick = () => {\n    setUsuarios([...usuarios, {\n      id: Math.random(),\n      nombre: nombre\n    }]);\n  };\n\n  const handleChange = e => {\n    setNombre(e.target.value);\n  };\n\n  const borrarUsuario = id => {\n    setUsuarios(usuarios.filter(usuario => usuario.id != id));\n  };\n\n  const borrarUsuarioMemorizada = useCallback(borrarUsuario, []);\n  console.log(\"Nuevo Render Carrito\");\n\n  const guardarCompra = () => {\n    //Representacion de coleccion en Firebase que no existe y se crea cuando se le guarda un documento dentro\n    const ordenesCollection = collection(db, \"ordenes\");\n    const orden = {\n      buyer: {\n        name: \"juan\",\n        phone: \"54555\",\n        email: \"test@test\"\n      },\n      //items : [{id:1,titulo:\"Pantalon\"}],\n      items: carrito,\n      date: \"\",\n      total: 10000\n    };\n    const consulta = addDoc(ordenesCollection, orden);\n    consulta.then(resultado => {\n      setIdCompra(resultado.id);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Carrito\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Precio Total: $\", precio_total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CarritoLista, {\n      usuarios: usuarios,\n      borrarUsuario: borrarUsuarioMemorizada\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: guardarCompra,\n      children: \"Finalizar compra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), idCompra && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Compra guardada con id: \", idCompra]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Carrito, \"C8jnIpjtTDW+dhGY6u3EUtK+egM=\");\n\n_c = Carrito;\nexport default Carrito;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carrito\");","map":{"version":3,"sources":["C:/Users/usuario/Desktop/programming/ale_duque/src/Carrito.js"],"names":["useCallback","useContext","useState","CarritoLista","contexto","db","collection","addDoc","Carrito","precio_total","carrito","vaciarCarrito","usuarios","setUsuarios","nombre","setNombre","idCompra","setIdCompra","handleClick","id","Math","random","handleChange","e","target","value","borrarUsuario","filter","usuario","borrarUsuarioMemorizada","console","log","guardarCompra","ordenesCollection","orden","buyer","name","phone","email","items","date","total","consulta","then","resultado","catch","err"],"mappings":"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","sourcesContent":["import { useCallback, useContext, useState } from \"react\"\r\nimport CarritoLista from \"./CarritoLista\"\r\nimport { contexto } from \"./miContexto\"\r\nimport { db } from \"./firebase\"\r\nimport { collection , addDoc } from \"firebase/firestore\"\r\n\r\nconst Carrito = () => {\r\n\r\n  const { precio_total, carrito, vaciarCarrito } = useContext(contexto)\r\n  const [usuarios, setUsuarios] = useState([])\r\n  const [nombre , setNombre] = useState(\"\")\r\n  const [idCompra, setIdCompra] = useState(\"\")\r\n\r\n\r\n  const handleClick = () => {\r\n\r\n    setUsuarios([...usuarios,{\r\n      id : Math.random(),\r\n      nombre : nombre\r\n    }])\r\n\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setNombre(e.target.value)\r\n  }\r\n\r\n  const borrarUsuario = (id) => {\r\n    setUsuarios(usuarios.filter(usuario=>usuario.id!=id))\r\n  }\r\n\r\n  const borrarUsuarioMemorizada = useCallback(borrarUsuario,[])\r\n\r\n  console.log(\"Nuevo Render Carrito\")\r\n\r\n  const guardarCompra = () => {\r\n    //Representacion de coleccion en Firebase que no existe y se crea cuando se le guarda un documento dentro\r\n    const ordenesCollection = collection(db,\"ordenes\")\r\n\r\n    const orden = {\r\n      buyer : {\r\n        name : \"juan\",\r\n        phone : \"54555\",\r\n        email : \"test@test\"\r\n      },\r\n      //items : [{id:1,titulo:\"Pantalon\"}],\r\n      items : carrito,\r\n      date : \"\",\r\n      total : 10000\r\n    }\r\n\r\n    const consulta = addDoc(ordenesCollection,orden)\r\n\r\n    consulta\r\n    .then((resultado)=>{\r\n      setIdCompra(resultado.id)\r\n    })\r\n    .catch((err)=>{\r\n      console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Carrito</h1>\r\n      <h2>Precio Total: ${precio_total}</h2>\r\n      <button onClick={handleClick}>click</button>\r\n      <input type=\"text\" onChange={handleChange}/>\r\n      {/* <input type=\"text\" onChange={handleChange}/>\r\n      <input type=\"text\" onChange={handleChange}/> */}\r\n      <CarritoLista usuarios={usuarios} borrarUsuario={borrarUsuarioMemorizada}/>\r\n      <button onClick={guardarCompra}>Finalizar compra</button>\r\n      {idCompra && <h3>Compra guardada con id: {idCompra}</h3>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Carrito"]},"metadata":{},"sourceType":"module"}